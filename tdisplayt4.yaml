esphome:
  name: tdisplayt4
  includes:
    - esphomeRemote/MenuGlobals.h
    - esphomeRemote/MenuTitle.h
    - esphomeRemote/esphomeRemotePlayer.h
    - esphomeRemote/esphomeRemoteService.h
    - esphomeRemote/esphomeRemoteLight.h
    - esphomeRemote/esphomeRemoteSensor.h
    - esphomeRemote/DisplayUpdateInterface.h
    - esphomeRemote/esphomeRemote.h
    - esphomeRemote/esphomeRemoteNowPlayingMenu.h
    - esphomeRemote/esphomeRemote3Button.h

esp32:
  board: esp32dev
  framework:
    type: arduino

substitutions:
  boot_name: '"Kitchen Remote <3"'
  friendly_name: "Kitchen Remote"
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  wifi_fallback_password: !secret wifi_fallback_password
  large_font_size: "24"
  medium_font_size: "20"
  small_font_size: "18"
  icon_size: "24"
  icon_size_large: "28"
  header_height: "24"
  margin_size: "8"
  scroll_bar_width: "8"
  bottom_bar_margin: "42"
  now_playing_max_lines: "10"
  draw_now_playing_menu: "true"
  draw_battery_level: "false"
  draw_volume_level: "false"
  draw_shuffle_disabled: "false"
  color_accent_primary_red: 63%
  color_accent_primary_green: 13%
  color_accent_primary_blue: 94%

<<: !include esphomeRemote/sharedRemoteConfig.yaml

sensor:
  - platform: template
    id: display_update_tick
    filters:
      - debounce: 0.02s
    on_value :
      then:
        - lambda: |-
            if(idleTime < 2) {
              displayUpdate.updateDisplay(true);
            }
  - platform: template
    name: Battery Percent
    id: batteryPercent
    unit_of_measurement: '%'

binary_sensor:
  - platform: gpio
    id: T4_BtnA
    pin:
      number: 39
      inverted: true
    on_click:
      then:
        - lambda: |-
            buttonPressLeft();
  - platform: gpio
    id: T4_BtnB
    pin:
      number: 37
      inverted: true
    on_click:
      then:
        - lambda: |-
            buttonPressSelect();
  - platform: gpio
    id: T4_BtnC
    pin:
      number: 38
      inverted: true
    on_click:
      then:
        - lambda: |-
            buttonPressRight();

# We can still control the backlight independently
switch:
  - platform: gpio
    pin:
      number: 27
      inverted: false
    id: comb
    internal: true
  - platform: gpio
    pin:
      number: 26
      inverted: false
    id: coma
    internal: true
  - platform: gpio
    pin: GPIO4
    name: "Backlight"
    id: backlight
    internal: true
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template
    name: Sleep Toggle
    id: sleep_toggle
    optimistic: true
    internal: true
    on_turn_on:
      then:
        - deep_sleep.enter:
            id: deep_sleep_1

time:
  - platform: homeassistant
    id: esptime

spi:
  clk_pin: 18
  miso_pin: 12
  mosi_pin: 23

display:
  - platform: ili9341
    id: my_display
    model: TFT_2.4
    cs_pin: 27
    dc_pin: 32
    led_pin: 04  ### see note below ###
    reset_pin: 05
    update_interval: 600s
    rotation: 90
    lambda: |-
      if (idleTime < 0) {
        ESP_LOGD("drawing menu", "turning on");
        id(backlight).turn_on();
        idleTime = 0;
      } else if (!id(backlight).state) {
        ESP_LOGD("drawing menu", "turning off %d", idleTime);
        id(my_display).set_update_interval(60000);
        return;
      }
      charging = true;
      drawMenu();
      return;