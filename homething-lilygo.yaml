esphome:
  name: "homething-lilygo"
  platform: ESP32
  board: featheresp32

packages:
  device_base: !include common/device_base.yaml
  sensor: !include common/lilygo_tdisplay_ipod_sensor.yaml
  switch: !include common/lilygo_tdisplay_ipod_switch.yaml
  binary_sensor: !include common/lilygo_tdisplay_ipod_binary_sensor.yaml

font:
  ## Font needs to be monospace!
    - file: "fonts/iosevka-heavy.ttf"
      id: large_heavy_font
      size: 24
      glyphs: '^…*/|\$#<>!?"%()[]+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz&êÊîÎâÂôÔéÉíÍáÁóÓëËüÜïÏöÖøØṣṢñãõÑÃÕ''’'
    - file: "fonts/iosevka.ttf"
      id: large_font
      size: 24
      glyphs: '^…*/|\$#<>!?"%()[]+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz&êÊîÎâÂôÔéÉíÍáÁóÓëËüÜïÏöÖøØṣṢñãõÑÃÕ''’'
    - file: "fonts/iosevka.ttf"
      id: medium_font
      size: 15
      glyphs: '^…*/|\$#<>!?"%()[]+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz&êÊîÎâÂôÔéÉíÍáÁóÓëËüÜïÏöÖøØṣṢñãõÑÃÕ''’'
    - file: "fonts/iosevka.ttf"
      id: small_font
      size: 14
      glyphs: '^…*/|\$#<>!?"%()[]+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz&êÊîÎâÂôÔéÉíÍáÁóÓëËüÜïÏöÖøØṣṢñãõÑÃÕ''’'
    - file: 'fonts/homeThingFontLogo.ttf' 
      id: home_thing_logo
      size: 48
      glyphs: [
        '',
      ]  
    - file: 'fonts/materialdesignicons-webfont.ttf' 
      id: material_font_large
      size: 19
      glyphs: [
        '󰐊', # mdi-play
        '󰓛', # mdi-stop
        '󰏤', # home-pause
        '󰽥', # mdi-moon-waning-crescent
        '󰒝', # mdi-shuffle
        '󰒞', # mdi-shuffle-disabled
        '󰕾', # mdi-volume-high
        '󰕿', # mdi-volume-low
        '󰚺', # mdi-plex
        '󰝆', # mdi-netflix
        '󰗃', # mdi-youtube
        '󰓇', # mdi-spotify
        '󰔂', # mdi-television
        '󰋜', # mdi-home
        '󰌵', # mdi-lightbulb
        '󰌶', # mdi-lightbulb-outline
      ]  
    - file: 'fonts/materialdesignicons-webfont.ttf' 
      id: material_font_small
      size: 18
      glyphs: [
        '󰐊', # mdi-play
        '󰓛', # mdi-stop
        '󰏤', # home-pause
        '󰽥', # mdi-moon-waning-crescent
        '󰒝', # mdi-shuffle
        '󰒞', # mdi-shuffle-disabled
        '󰕾', # mdi-volume-high
        '󰕿', # mdi-volume-low
        '󰚺', # mdi-plex
        '󰝆', # mdi-netflix
        '󰗃', # mdi-youtube
        '󰓇', # mdi-spotify
        '󰔂', # mdi-television
        '󰋜', # mdi-home
        '󰌵', # mdi-lightbulb
        '󰌶', # mdi-lightbulb-outline
      ]

deep_sleep:
  id: deep_sleep_
      
binary_sensor:
  - platform: template
    id: charging

sensor:
## Battery
  - platform: adc
    pin: 34
    attenuation: 11db
    name: "vccadc"
    update_interval: 250ms
    id: vcc_adc
    internal: true
    on_value:
      then:
        lambda: |-
          if (!id(charging)->has_state()) {
              id(charging)->publish_state(false);
          } else if (id(vcc_adc).state > 2.23) {
            if (!id(charging).state) {
              id(charging)->publish_state(true);
            }
          } else {
            if (id(charging).state) {
              id(charging)->publish_state(false);
            }
          }
          id(vcc_adc_avg).publish_state(id(vcc_adc).state);
  - platform: template
    id: vcc_adc_avg
    filters:
      - sliding_window_moving_average:
          window_size: 4
          send_every: 4
    on_value :
      then:
        - sensor.template.publish:
            id: batteryVoltage
            state: !lambda 'return id(vcc_adc).state;'
  - platform: template
    name: batteryVoltage
    id: batteryVoltage
    internal: true
    unit_of_measurement: 'V'
    on_value :
      then:
        - sensor.template.publish:
            id: battery_percent
            state: !lambda 'return (id(batteryVoltage).state * 118) - 162;'
  - platform: template
    name: Battery Percent
    id: battery_percent
    unit_of_measurement: '%'
    on_value_range:
      below: 5
      then:
        lambda: |-
          ESP_LOGE("SLEEP", "Low Power Supply %.3fV! Sleeping to protect battery", id(battery_percent).state);
          id(sleep_toggle).turn_on();

switch:
  - platform: template
    name: Sleep Toggle
    id: sleep_toggle
    optimistic: true
    on_turn_on:
      then:
        - deep_sleep.enter:
            id: deep_sleep_
  - platform: gpio
    pin: GPIO4
    name: "Backlight"
    id: backlight
    internal: true
    restore_mode: RESTORE_DEFAULT_ON

spi:
  clk_pin: GPIO18
  mosi_pin: GPIO19

homeThing:
  id: homeThingMenu
  sleep_switch: sleep_toggle
  backlight: backlight
  battery:
    battery_percent: battery_percent
    charging: charging
  media_players: media_group_component
  lights: light_group_component
  services: service_group_component
  sensors: sensor_group_component
  switches: switch_group_component
  display: my_display
  on_redraw:
    then:
      component.update: my_display
  boot:
    api: api_connected
  display_state:
    draw_battery_level: true
    font_small: small_font
    font_medium: medium_font
    font_large: large_font
    font_large_heavy: large_heavy_font
    font_material_large: material_font_large
    font_material_small: material_font_small
    font_logo: home_thing_logo

display:
  - platform: st7789v
    model: TTGO_TDisplay_135x240
    id: my_display
    backlight_pin: GPIO4
    cs_pin: GPIO5
    dc_pin: GPIO16
    reset_pin: GPIO23
    rotation: 90
    update_interval: 10s
    lambda: |-
      id(homeThingMenu)->draw_menu_screen();
      return;
